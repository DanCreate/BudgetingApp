@model IEnumerable<AccountOrderType>
@{

    ViewData["Title"] = "Account Type";
}



<h1>Account Type</h1>
<h5>
    Account type refers to the order account will be grouped by. (Credit Card,
    Debit Card, Loans).
</h5>
<a asp-action="Create" class="btn btn-primary mb-3">Create New</a>

<table class="table">

    <thead>
        <tr>
            <th>Name</th>
            <th>Action</th>


        </tr>



    </thead>
    <tbody id="reorder">
        @foreach (var accountType in Model)
        {
            <tr>

                <td>

                    @accountType.Name

                </td>
                <td>
                    <input type="hidden" value="@accountType.Id" class="ids" />
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@accountType.Id">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@accountType.Id">Delete</a>



                </td>


            </tr>


        }

    </tbody>



</table>

@section Scripts{

    <script>

        const urlOrder = '@Url.Action("Order")';
        $(function () {

            $("#reorder").sortable({

                stop: async function (e, ui) {
                    await updateOrder();
                }

            });

            async function updateOrder() {
                const ids = getIdsElements();
                await sendidstobackend(ids);

            }

            function getIdsElements() {
                const ids = $(".ids").map(function () {

                    return $(this).val();


                }).get();
                return ids;
            }

            async function sendidstobackend(ids) {

                var data = JSON.stringify(ids);

                await fetch(urlOrder, {

                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-type': 'application/json'
                    }
                });
            }

        })

    </script>

   }
